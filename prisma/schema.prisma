// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  uid       String   @unique
  name      String
  email     String   @unique
  posts     Post[]
  createdAt DateTime @default(now())
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title      String
  content    String
  authorId   String         @db.ObjectId
  author     User           @relation(fields: [authorId], references: [id])
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  tags       PostTag[]
  categories PostCategory[]
}

model Tag {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name  String    @unique
  posts PostTag[]
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name  String         @unique
  posts PostCategory[]
}

model PostTag {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  postId   String   @db.ObjectId
  tagId    String   @db.ObjectId
  linkedAt DateTime @default(now())

  post Post @relation(fields: [postId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])

  @@unique([postId, tagId])
}

model PostCategory {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  postId     String   @db.ObjectId
  categoryId String   @db.ObjectId
  linkedAt   DateTime @default(now())

  post     Post     @relation(fields: [postId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@unique([postId, categoryId])
}
